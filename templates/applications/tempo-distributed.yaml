{{ if .Values.applications.tempo.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: tempo
  namespace: {{ .Values.applications.argocd.namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: {{ .Values.applications.tempo.wave | quote }}
  labels:
    {{- include "app-of-apps.labels" . | nindent 4 }}
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ .Values.applications.tempo.namespace }}
  project: {{ .Values.project.name }}
  source:
    chart: tempo-distributed
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: {{ .Values.applications.tempo.revision }}
    helm:
      valuesObject:
        tempo:
          memberlist:
            appProtocol: tcp
        server:
          logLevel: {{ .Values.logs.level }}
          logFormat: {{ .Values.logs.format }}
        querier:
          appProtocol:
            grpc: grpc
          frontend_worker:
            frontend_address: tempo-distributed-query-frontend.tempo.svc.cluster.local:3100
        ingester:
          appProtocol:
            grpc: grpc
          persistence:
            enabled: true
        distributor:
          appProtocol:
            grpc: grpc
        metricsGenerator:
          enabled: true
          appProtocol:
            grpc: grpc
        queryFrontend:
          query:
            enabled: true
            extraArgs:
              - '--grpc-storage-plugin.configuration-file=/config/tempo-query.yaml'
            extraEnv:
              - name: TMPDIR
                value: /tmp2
            extraVolumeMounts:
              - mountPath: /tmp2
                name: tmp2
              - name: config-query
                mountPath: /config/tempo-query.yaml
                subPath: tempo-query.yaml
          extraVolumes:
            - name: tmp2
              emptyDir: { }
            - name: config-query
              configMap:
                name: tempo-distributed-config
                items:
                  - key: "tempo-query.yaml"
                    path: "tempo-query.yaml"
        gateway:
          enabled: true
          nginxConfig:
            serverSnippet: |
              location ~ ^/jaeger-query/(.*) {
                proxy_pass       http://tempo-distributed-query-frontend.tempo.svc.cluster.local:16686/$1$is_args$args;
              }
        minio:
          enabled: false
        storage:
          trace:
            backend: s3
            s3:
              bucket: tempo-{{ .Values.project.region }}-{{ .Values.project.environment }}
              access_key: tempo
              secret_key: testtesttest
              endpoint: minio.minio.svc.cluster.local:9000
              insecure: true
        traces:
          otlp:
            http:
              enabled: true
          jaeger:
            grpc:
              enabled: true
          zipkin:
            enabled: true
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
    managedNamespaceMetadata:
      labels:
        istio-injection: enabled
{{ end }}
